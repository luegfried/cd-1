#!/bin/bash
# Ancestor/descendant traversal | Spencer Tipping
# Licensed under the terms of the MIT source code license

cd_on '^\.\.[^/]' cd_traverse_ancestor
cd_on '^\*\*'     cd_traverse_descendant

function cd_traverse_ancestor {
  local pattern="${1#..}[^/]*$"
  local firstpwd=$PWD
  while [[ !("${PWD##*/}" =~ $pattern) && $PWD != / ]]; do
    builtin cd ..
  done
  local newpwd=$PWD
  builtin cd "$firstpwd"    # go back so we can set $OLDPWD correctly

  if [[ $newpwd != '/' ]]; then
    cd_goto "$newpwd"       # adds an entry to history, which we probably want
  else
    echo "cd: no ancestor matches '${1#..}'"
    return 1
  fi
}

function cd_traverse_descendant {
  echo "cd: searching for descendants named '${1#\*\*}'..."

  local name=${1#\*\*}
  if [[ "${name%/}" != "$name" ]]; then
    local dir_constraint='-type d'
  fi

  local destination=$(find . -name "$name" $dir_constraint -print -quit)
  if [[ -n "$destination" ]]; then
    if [[ -d "$destination" ]]; then
      cd_goto "$destination"
    else
      cd_goto "${destination%/*}"
    fi
  else
    echo "cd: no descendant matches '${1#\*\*}'"
    return 1
  fi
}
